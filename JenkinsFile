node {
    stage('Update Project') {
        git branch: 'main', changelog: true, poll: true, url: 'https://github.com/toms99/Karaoke-App'
    }
    stage ('Build') {
        dir('./Backend') {
            sh 'npm i'
            sh 'npm ci'
        }
        dir('./KaraokeFrontend') {
            sh 'npm i'
            sh 'npm ci'
            sh 'npm run build'
        }
    }
    stage ('Unit_test') {
        dir('./Backend') {
            sh 'npm test'
        }
        dir('./KaraokeFrontend') {
            sh 'npm test'
        }
    }
    stage('SonarCloud and deploy') {
        parallel(
            "sonarcloud": {
                stage("sonarcloud") {
                    catchError {
                        def SCANNER_HOME = tool 'sonar'
                        def ORGANIZATION = "team-soa"
                        def PROJECT_NAME = "toms99_Karaoke-App"

                        withSonarQubeEnv('SonarQube') {
                            sh """
                                ${SCANNER_HOME}/bin/sonar-scanner \
                                -Dsonar.organization=${ORGANIZATION} \
                                -Dsonar.projectKey=${PROJECT_NAME} \
                                -Dsonar.sources=. \
                                -Dsonar.host.url=https://sonarcloud.io/
                            """
                        }
                    }
                }
            },
            "deploy": {
                stage("deploy") {
                    sshagent(credentials : ['teamsoakey']){
                        sh 'scp -o StrictHostKeyChecking=no -r Backend teamsoa@168.62.39.210:Karaoke-App'
                        sh 'scp -o StrictHostKeyChecking=no -r KaraokeFrontend/dist teamsoa@168.62.39.210:Karaoke-App/KaraokeFrontend'
                        catchError {sh "ssh -o StrictHostKeyChecking=no teamsoa@168.62.39.210 pm2 stop all"}
                        sh 'ssh -o StrictHostKeyChecking=no teamsoa@168.62.39.210 "cd Karaoke-App/Backend && export PORT=5000 && pm2 --name api start npm -- start"'
                    }
                }
            }
        )
    }
   currentBuild.result = 'SUCCESS'
   return
}